{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","ToDoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"oWAEeA,G,MCCG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACtB,OACE,yBAAKC,UAAU,qBACf,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,YCLSE,G,kNCIXC,MAAM,CACJC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAAEL,SAChB,EAAKM,MAAML,eAAeD,I,uDAI1B,OACE,2BAAOO,KAAK,OACFV,UAAU,4BACVW,YAAY,iBACZJ,MAAOK,KAAKV,MAAMC,KAClBU,SAAUD,KAAKR,qB,GAlBQU,c,QCCpBC,G,6KAEN,IAAD,EAKLH,KAAKH,MAHFO,EAFE,EAEFA,MAAOC,EAFL,EAEKA,UACbC,EAHQ,EAGRA,kBAAmBC,EAHX,EAGWA,aACnBC,EAJQ,EAIRA,UAGEC,EAAa,iBAQjB,OAfU,EAIGtB,OAKXsB,GAAY,SAEZD,IACDC,GAAa,cAIZ,0BAAMrB,UAAWqB,GACf,0BACErB,UAAU,uBACVsB,QAAUH,GACTH,GAGH,4BAAQN,KAAK,SACLV,UAAU,6CACVsB,QAASJ,GACf,uBAAGlB,UAAU,uBAGf,4BAAQU,KAAK,SACLV,UAAU,4CACVsB,QAASL,GACf,uBAAGjB,UAAU,wB,GAlCmBc,cCH3BS,G,MCGE,SAAC,GACsB,IADpBC,EACmB,EADnBA,MAAOP,EACY,EADZA,UACxBC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,aAEZM,EAAWD,EAAME,KAAI,SAACC,GAAQ,IAEzBC,EAAkBD,EAAlBC,GAAOC,EAFiB,YAENF,EAFM,QAI/B,OACA,wBAAIG,IAAMF,EAAI5B,UAAU,mBACpB,kBAAC,EAAD,iBACK6B,EADL,CAEDZ,UAAW,kBAAMA,EAAUW,IAC3BV,kBAAmB,kBAAKA,EAAkBU,IAC1CT,aAAc,kBAAKA,EAAaS,WAKvC,OACE,wBAAI5B,UAAU,wBACZyB,KCvBOM,G,kNCIbC,QAAS,CACP,CAACC,KAAM,MAAOjB,MAAO,OACrB,CAACiB,KAAM,SAAUjB,MAAO,UACxB,CAACiB,KAAM,OAAQjB,MAAO,S,uDAGf,IAAD,EAE2BJ,KAAKH,MAA9ByB,EAFF,EAEEA,OAAOC,EAFT,EAESA,eAETH,EAAUpB,KAAKoB,QAAQN,KAAI,YAAkB,IAAhBO,EAAe,EAAfA,KAAMjB,EAAS,EAATA,MAEjCoB,EADWF,IAAWD,EACH,WAAa,wBAEtC,OACE,4BAAQvB,KAAK,SACfV,UAAS,cAASoC,GAASN,IAAKG,EAChCX,QAAS,kBAAKa,EAAeF,KAAQjB,MAKvC,OACE,yBAAKhB,UAAU,aACZgC,O,GA1BqClB,cCF/BuB,G,wNCIXnC,MAAQ,CACJc,MAAO,I,EAGXsB,cAAgB,SAACjC,GACf,EAAKG,SAAS,CACZQ,MAAOX,EAAEC,OAAOC,S,EAIpBgC,SAAW,SAAClC,GACRA,EAAEmC,iBACF,EAAK/B,MAAMgC,YAAY,EAAKvC,MAAMc,OAClC,EAAKR,SAAS,CACVQ,MAAO,M,uDAKX,OACI,0BAAMhB,UAAW,uBAChBuC,SAAU3B,KAAK2B,UAEZ,2BAAO7B,KAAM,OAAOV,UAAU,eAC9Ba,SAAUD,KAAK0B,cACd3B,YAAY,wBACZJ,MAAOK,KAAKV,MAAMc,QACnB,4BAAQhB,UAAU,6BAAlB,iB,GA7ByBc,cCSpB4B,E,4MAEjBC,MAAQ,I,EAERzC,MAAM,CACF0C,SAAU,CACN,EAAKC,eAAe,gBACpB,EAAKA,eAAe,oBACpB,EAAKA,eAAe,iBAExB1C,KAAM,GACN+B,OAAQ,O,EAYZY,WAAa,SAAClB,GACX,EAAKpB,UAAS,YAAkB,IAAfoC,EAAc,EAAdA,SAEVG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAOA,EAAGrB,KAAMA,KAO/C,MAAM,CACFgB,SANU,sBACPA,EAASM,MAAM,EAAGH,IADX,YAENH,EAASM,MAAMH,EAAM,U,EAQ7BI,QAAU,SAACC,GAEP,IAAMC,EAAU,EAAKR,eAAeO,GAGpC,EAAK5C,UAAU,YAAe,IAAboC,EAAY,EAAZA,SAKb,MAAO,CACHA,SALS,GAAD,mBACLA,GADK,CAERS,S,EAwBZlC,aAAe,SAACS,GACR,EAAKpB,UAAS,YAAgB,IAAdoC,EAAa,EAAbA,SACZ,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,a,EAK5DV,kBAAkB,SAACU,GACf,EAAKpB,UAAS,YAAgB,IAAdoC,EAAa,EAAbA,SACZ,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,kB,EAKxDxB,eAAiB,SAACD,GACd,EAAKK,SAAS,CAAEL,U,EAGpBgC,eAAiB,SAACD,GACd,EAAK1B,SAAS,CAAE0B,Y,6DA7ETlB,GACX,MAAO,CACCA,QACAI,WAAW,EACXrB,MAAM,EACN6B,GAAIhB,KAAK+B,W,qCAoCFY,EAAK3B,EAAI4B,GACpB,IAAMT,EAAMQ,EAAIP,WAAU,SAACC,GAAD,OAAOA,EAAGrB,KAAMA,KAEhC6B,EAAQF,EAAIR,GACZM,EAAO,2BAAQI,GAAR,kBACRD,GAAYC,EAAQD,KAGrB,MAAM,GAAN,mBACOD,EAAIL,MAAM,EAAGH,IADpB,CAEIM,GAFJ,YAGQE,EAAIL,MAAMH,EAAM,O,6BA4B7BW,EAAOvD,GACV,OAAmB,IAAhBA,EAAKwD,OACGD,EAGNA,EAAMxB,QAAO,SAACP,GACf,OAAOA,EAAKX,MAAM4C,cAAcC,QAAQ1D,EAAKyD,gBAAkB,O,6BAIhEF,EAAOxB,GAEV,OAAOA,GACH,IAAK,MACD,OAAOwB,EACX,IAAK,SACD,OAAOA,EAAMxB,QAAO,SAACP,GAAD,OAAWA,EAAK5B,QACxC,IAAK,OACD,OAAO2D,EAAMxB,QAAO,SAACP,GAAD,OAASA,EAAK5B,QAClC,QACG,OAAO2D,K,+BAMjB,IAAD,EAC6B9C,KAAKV,MAA/B0C,EADH,EACGA,SAAUzC,EADb,EACaA,KAAM+B,EADnB,EACmBA,OAEjB4B,EAAelD,KAAKsB,OAAOtB,KAAKmD,OAAOnB,EAAUzC,GAAO+B,GACxD8B,EAAYpB,EAASV,QAAO,SAACe,GAAD,OAAMA,EAAGlD,QAAM4D,OAE3CM,EAAWrB,EAASe,OAASK,EAEnC,OACI,yBAAKhE,UAAU,YACf,kBAAC,EAAD,CAAWF,KAAMmE,EAAWlE,KAAMiE,IAClC,yBAAKhE,UAAU,oBACf,kBAAC,EAAD,CAAaI,eAAgBQ,KAAKR,iBAElC,kBAAC,EAAD,CACC8B,OAAQA,EACRC,eAAgBvB,KAAKuB,kBAGtB,kBAAC,EAAD,CACAX,MAAQsC,EACR7C,UAAYL,KAAKkC,WACjB5B,kBAAmBN,KAAKM,kBACxBC,aAAcP,KAAKO,eAEnB,kBAAC,EAAD,CAAasB,YAAa7B,KAAKuC,e,GAjJVrC,aCPjCoD,IAASC,OAAO,kBAAC,EAAD,MACbC,SAASC,eAAe,W","file":"static/js/main.037a7e6e.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done})=>{\n    return (\n      <div className=\"app-header d-flex\">\n      <h1>ToDo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n      </div>\n    );\n  };\n\n  export default AppHeader;","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component{\n\n    state={\n      term: ''\n    };\n\n    onSearchChange = (e) => {\n      const term = e.target.value;\n      this.setState({ term });\n      this.props.onSearchChange(term);\n    };\n\n    render(){\n      return (\n        <input type=\"text\"\n                  className=\"form-control search-input\"\n                  placeholder=\"type to search\" \n                  value={this.state.term} \n                  onChange={this.onSearchChange}/>\n      );\n    }\n}\n","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\n\nexport default class TodoListItem extends Component{\n  \n      render(){\n\n    const { label, onDeleted, \n      onToggleImportant, onToggleDone,\n      important, done \n     } = this.props;\n\n    let classNames = 'todo-list-item';\n    if(done){\n      classNames+=' done';\n    }\n   if(important){\n     classNames+= ' important';\n   }\n  \n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={ onToggleDone}>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n","import ToDoList from './todo-list';\n\nexport default ToDoList; ","import React from 'react';\n\nimport ToDoListItem from '../todo-list-item/todo-list-item';\nimport './todo-list.css';\n\nconst ToDoList = ({ todos, onDeleted,\n   onToggleImportant, onToggleDone })=>{\n\n    const elements = todos.map((item)=>{\n\n        const {id, ...itemProps}=item;\n\n        return (\n        <li key ={id} className=\"list-group-item\">\n            <ToDoListItem\n            { ...itemProps }\n           onDeleted={() => onDeleted(id)}\n           onToggleImportant={()=> onToggleImportant(id)}\n           onToggleDone={()=> onToggleDone(id)}\n           />\n        </li>  \n        );  \n    });\n    return(\n      <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n    );\n  };\n\n  export default ToDoList; ","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component{\n\n  buttons =[\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'}\n  ];\n\n  render(){\n\n    const { filter,onFilterChange }= this.props;\n\n    const buttons = this.buttons.map(({name, label})=>{\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'; \n\n      return(\n        <button type=\"button\"\n      className={`btn ${clazz}`} key={name}\n      onClick={()=> onFilterChange(name)}>{label}</button>\n      );\n    });\n\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n\n/*\nconst ItemStatusFilter = () => {\n  return (\n    <div className=\"btn-group\">\n      <button type=\"button\"\n              className=\"btn btn-info\">All</button>\n      <button type=\"button\"\n              className=\"btn btn-outline-secondary\">Active</button>\n      <button type=\"button\"\n              className=\"btn btn-outline-secondary\">Done</button>\n    </div>\n  );\n};\n\nexport default ItemStatusFilter;*/","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component{\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (e) =>{\n      this.setState({\n        label: e.target.value\n      }) ;\n    };\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form className =\"item-add-form d-flex\"\n             onSubmit={this.onSubmit}>\n               \n                <input type =\"text\" className=\"form-control\"\n                onChange={this.onLabelChange}\n                 placeholder=\"What needs to be done\"\n                 value={this.state.label}/>\n                <button className=\"btn btn-outline-secondary\">\n                    Add Item\n                    </button>\n            </form>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\n\nimport ToDoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\n\nimport './app.css';\nimport TodoListItem from '../todo-list-item';\nimport ItemAddForm from '../item-add-form';\n\n\nexport default class App extends Component{\n    \n    maxId = 100;\n\n    state={\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all' // active, all, done\n    };\n\n    createTodoItem(label){\n        return {     \n                label,\n                important: false,\n                done: false,\n                id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) =>{\n       this.setState(({ todoData }) =>{\n\n        const idx = todoData.findIndex((el)=> el.id ===id);\n\n        const newArray = [\n            ...todoData.slice(0, idx),\n             ...todoData.slice(idx + 1)\n        ];\n\n        return{\n            todoData: newArray\n        }\n       });\n    };\n        addItem = (text) =>{\n            //generate id\n            const newItem = this.createTodoItem(text);\n\n            // add element in array\n            this.setState (({todoData})=>{\n                const newArr=[\n                    ...todoData,\n                    newItem\n                ];\n                return {\n                    todoData: newArr\n                }\n            });\n\n        };\n\n        toggleProperty(arr, id, propName){\n            const idx = arr.findIndex((el)=> el.id ===id);\n                    //1. update object\n                const oldItem=arr[idx];\n                const newItem = { ...oldItem, \n                    [propName]: !oldItem[propName]};\n\n                    //2. construct new array\n                    return [\n                        ...arr.slice(0, idx),\n                        newItem,\n                         ...arr.slice(idx + 1)\n                    ];\n        }\n\n        onToggleDone = (id) => {\n                this.setState(({todoData})=> {\n                    return {\n                        todoData: this.toggleProperty(todoData, id, 'done')\n                    };\n                });\n        };\n        \n        onToggleImportant=(id)=>{\n            this.setState(({todoData})=> {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'important')\n                };\n            });\n        };\n\n        onSearchChange = (term) =>{\n            this.setState({ term });\n        };\n\n        onFilterChange = (filter) =>{\n            this.setState({ filter });\n        };\n\n        search(items, term) {\n            if(term.length === 0){\n                return items;\n            }\n\n          return items.filter((item)=>{\n                return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n            });\n        }\n\n        filter(items, filter){\n            \n            switch(filter){\n                case 'all':\n                    return items;\n                case 'active':\n                    return items.filter((item) => !item.done)\n                case 'done':\n                    return items.filter((item)=> item.done);\n                    default:\n                       return items;    \n            }\n\n        }\n\n\n    render(){\n        const {todoData, term, filter }= this.state;\n\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n        const doneCount = todoData.filter((el)=>el.done).length;\n\n        const todoCount =todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n            <AppHeader toDo={todoCount} done={doneCount} />\n            <div className=\"top-panel d-flex\">\n            <SearchPanel onSearchChange={this.onSearchChange}/>\n            \n            <ItemStatusFilter\n             filter={filter}\n             onFilterChange={this.onFilterChange} />\n            </div>\n        \n            <ToDoList \n            todos ={visibleItems}\n            onDeleted={ this.deleteItem }\n            onToggleImportant={this.onToggleImportant}\n            onToggleDone={this.onToggleDone}/>\n\n            <ItemAddForm onItemAdded={this.addItem}/>\n            </div>\n          );\n        }\n    };","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\n\nReactDOM.render(<App/>,\n   document.getElementById('root'));\n"],"sourceRoot":""}